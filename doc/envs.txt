# client
# PATH ./
# USER_SERVICE_API defined the path used to call the service from the browser client
USER_SERVICE_API=http://localhost:4000

# NEWSLETTER_SERVICE_API defined the path used to call the service from the browser client
NEWSLETTER_SERVICE_API=http://localhost:4500

# NEWSLETTER_DOCKER_SERVICE_API defined the path used to call the service from the nextjs server side
# Given that we are on the server we can connect with the docker network newsletter_service
NEWSLETTER_DOCKER_SERVICE_API=http://newsletter_service:4500


# user-service
# PATH ./
# THESE VARIABLES ARE USED TO CREATE THE USER, PASSWORD, DATABASE INSIDE THE POSTGRES CONTAINER
# IT DEFINE THE DEFAULT_DATABASE THAT WE ARE USING AND THE PERMISSION WE HAVE INSIDE psql
POSTGRES_USERVICE_USER=${USER}
POSTGRES_USERVICE_PASSWORD=${PASSWORD}
POSTGRES_USERVICE_DB=${DB}

# PATH ./user-service
# USED INSIDE THE PATH OF THE API TO MANAGE THE VERSION
API_VERSION=/v1

# USER SERVICE SERVER PORT, SHOULD BE THE SAME AS THE ONE INSIDE THE DOCKER COMPOSE FILE IF NOT A PROBLEM COULD HAPPEN WITh THE FORWARDING
PORT=:4000

# THIS DATABASE_URL IS USED TO CREATE A CONNECTION BETWEEN THE POSTGRES DB AND THE USER SERVICE SERVER 
DATABASE_URL=postgres://{USER}:{PASSWORD}@user_service_db:{PORT}/{DB}

# SECRET USED BY JWT TO MANAGE THE AUTENTICATION SHOULD BE THE SAMEIN USER SERVICE AND NEWSLETTER SERVICE, IF NOT THE AUTH WILL FAILED
JWT_SECRET=${JWT_SECRET}


# newsletter-service
# PATH ./
# THESE VARIABLES ARE USED TO CREATE THE USER, PASSWORD, DATABASE INSIDE THE POSTGRES CONTAINER
# IT DEFINE THE DEFAULT_DATABASE THAT WE ARE USING AND THE PERMISSION WE HAVE INSIDE psql
export POSTGRES_NERVICE_USER=${USER}
export POSTGRES_NSERVICE_PASSWORD=${PASSWORD}
export POSTGRES_NSERVICE_DB=${DB}

# PATH ./newsletter-service
# USED INSIDE THE PATH OF THE API TO MANAGE THE VERSION
API_VERSION=/v1

# USER SERVICE SERVER PORT, SHOULD BE THE SAME AS THE ONE INSIDE THE DOCKER COMPOSE FILE IF NOT A PROBLEM COULD HAPPEN WITh THE FORWARDING
PORT=:4500

# THIS DATABASE_URL IS USED TO CREATE A CONNECTION BETWEEN THE POSTGRES DB AND THE NEWSLETTER SERVICE SERVER 
DATABASE_URL=postgres://{USER}:{PASSWORD}@newsletter_service_db:{PORT}/{DB}

# SECRET USED BY JWT TO MANAGE THE AUTENTICATION SHOULD BE THE SAMEIN USER SERVICE AND NEWSLETTER SERVICE, IF NOT THE AUTH WILL FAILED
JWT_SECRET=JWT_SECRET

# FILES_PATH WILL BE STORING THE FILES WE WANT TO PERSIST IN OUR SERVER, CANNOT BE CHANGE UNLESS WE MODIFIED THE DOCKER COMPOSE FILE TO ASSIGN THE RESPECTIVE PERMISSION TO WRITE
FILES_PATH=/app/uploads

# BASE_URL USED TO GENERATE URL'S TO OUR SERVER, Example: "http://localhost:4500"(BASE_URL) + "/v1/newsletters/{newsletterId}/unsuscribe"
BASE_URL=http://localhost:4500

# THE EMAIL ADDRESS USED FOR AUTHENTICATION WITH THE GMAIL SMTP SERVER
GMAIL_EMAIL=KEY

# THE APPLICATION-SPECIFIC KEY REQUIRED FOR AUTHENTICATING WITH THE GMAIL API
GMAIL_KEY=KEYS

# THE HOSTNAME OF THE GMAIL SMTP SERVER USED FOR SENDING EMAILS.
GMAIL_HOST=KEY

# THE PORT NUMBER USED TO CONNECT TO THE GMAIL SMTP SERVER. USE 587 FOR TLS OR 465 FOR SSL.
GMAIL_PORT=KEY